DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS categories CASCADE;
DROP TABLE IF EXISTS events CASCADE;
DROP TABLE IF EXISTS requests CASCADE;
DROP TABLE IF EXISTS compilations CASCADE;
DROP TABLE IF EXISTS compilations_events CASCADE;

CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    email VARCHAR(260) UNIQUE NOT NULL,
    name  VARCHAR(260) NOT NULL,
    CONSTRAINT pk_users PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS categories (
       id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
       name  VARCHAR(50) UNIQUE NOT NULL,
       CONSTRAINT pk_categories PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS events (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    annotation VARCHAR(2000) NOT NULL,
    category_id BIGINT NOT NULL,
    created_on TIMESTAMP NOT NULL,
    description varchar(7000) NOT NULL,
    event_date TIMESTAMP NOT NULL,
    lat FLOAT NOT NULL,
    lon FLOAT NOT NULL,
    initiator_id BIGINT NOT NULL REFERENCES users (id),
    paid BOOLEAN NOT NULL,
    participant_limit INT NOT NULL,
    published_on TIMESTAMP,
    request_moderation BOOLEAN NOT NULL,
    state VARCHAR(64) NOT NULL,
    title VARCHAR(120) NOT NULL,
    CONSTRAINT pk_events PRIMARY KEY (id),
    CONSTRAINT fk_events_category FOREIGN KEY (category_id) REFERENCES categories (id)
);

CREATE TABLE IF NOT EXISTS requests (
   id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
   req_created TIMESTAMP NOT NULL,
   event_id BIGINT NOT NULL,
   user_id BIGINT NOT NULL,
   status VARCHAR(64) NOT NULL,
   CONSTRAINT pk_requests PRIMARY KEY (id),
   CONSTRAINT fk_requests_event FOREIGN KEY (event_id) REFERENCES events (id),
   CONSTRAINT fk_requests_user FOREIGN KEY (user_id) REFERENCES users (id)
   );

   CREATE TABLE IF NOT EXISTS compilations (
       compilation_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
       pinned BOOLEAN NOT NULL,
       title VARCHAR NOT NULL,
       CONSTRAINT pk_compilations PRIMARY KEY (compilation_id)
);

   CREATE TABLE IF NOT EXISTS compilations_events (
       comp_event_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
       compilation_id BIGINT  NOT NULL,
       event_id BIGINT  NOT NULL,
       CONSTRAINT pk_comp_event PRIMARY KEY (comp_event_id),
       CONSTRAINT fk_comp FOREIGN KEY (compilation_id) REFERENCES compilations (compilation_id),
       CONSTRAINT fk_event FOREIGN KEY (event_id) REFERENCES events (id)
);





